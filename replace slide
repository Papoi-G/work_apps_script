/* 
This apps script will create a new slide, and replace all the information in {{ }} with information in a Google Sheet
*/


function createSlide() {
    // Replace <INSERT_SLIDE_DECK_ID> wih the ID of your 
  // Google Slides presentation.
  let masterDeckID = "1AuVgNNT7OaDPWauiMyIglXtL3l2ufabfzPSdEwntUaw";

  // Open the presentation and get the slides in it.
  let deck = SlidesApp.openById(masterDeckID);
  let masterSlide = deck.getSlides()[1];


  // Load data from the spreadsheet.
  let dataRange = SpreadsheetApp.getActive().getSheetByName('Sheet1').getDataRange();
  let sheetContents = dataRange.getValues();


  // Save the header in a variable called header
  let header = sheetContents.shift();

  // Create an array to save the data to be written back to the sheet.
  // We'll use this array to save links to the slides that are created.
  let updatedContents = [];

  // Reverse the order of rows because new slides will
  // be inserted at the top. Without this, the order of slides
  // will be the inverse of the ordering of rows in the sheet. 
  sheetContents.reverse();

  // For every row, create a new slide by duplicating the master slide
  // and replace the template variables with data from that row.
  sheetContents.forEach(function (row) {

    // Insert a new slide by duplicating the master slide.
    let slide = deck.appendSlide(masterSlide);

    // Populate data in the slide that was created
    slide.replaceAllText("{{firstName}}", row[0]);
    slide.replaceAllText("{{lastName}}", row[1]);
    slide.replaceAllText("{{grade}}", row[2]);

    // Create the URL for the slide using the deck's ID and the ID
    // of the slide.
    let slideUrl = `https://docs.google.com/presentation/d/${deck.getId()}/edit#slide=id.${slide.getObjectId()}`;

    // Add this URL to the 4th column of the row and add this row
    // to the data to be written back to the sheet.
    row[3] = slideUrl;
    updatedContents.push(row);
  });

  // Add the header back (remember it was removed using 
  // sheetContents.shift())
  updatedContents.push(header);

  // Reverse the array to preserve the original ordering of 
  // rows in the sheet.
  updatedContents.reverse();

  // Write the updated data back to the Google Sheets spreadsheet.
  dataRange.setValues(updatedContents);

  rows_content = SpreadsheetApp.getActive().getSheetByName('Sheet1').getRange("A2:D").clearContent();
  
}
